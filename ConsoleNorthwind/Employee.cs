// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ConsoleNorthwind
{

    // Employees
    [Table("Employees", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Employee
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"EmployeeID", Order = 1, TypeName = "int")]
        [Index(@"PK_Employees", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee ID")]
        public int EmployeeId { get; set; } // EmployeeID (Primary key)

        [Column(@"LastName", Order = 2, TypeName = "nvarchar")]
        [Index(@"LastName", 1, IsUnique = false, IsClustered = false)]
        [Required]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 20)

        [Column(@"FirstName", Order = 3, TypeName = "nvarchar")]
        [Required]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (length: 10)

        [Column(@"Title", Order = 4, TypeName = "nvarchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "Title")]
        public string Title { get; set; } // Title (length: 30)

        [Column(@"TitleOfCourtesy", Order = 5, TypeName = "nvarchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Title of courtesy")]
        public string TitleOfCourtesy { get; set; } // TitleOfCourtesy (length: 25)

        [Column(@"BirthDate", Order = 6, TypeName = "datetime")]
        [Display(Name = "Birth date")]
        public System.DateTime? BirthDate { get; set; } // BirthDate

        [Column(@"HireDate", Order = 7, TypeName = "datetime")]
        [Display(Name = "Hire date")]
        public System.DateTime? HireDate { get; set; } // HireDate

        [Column(@"Address", Order = 8, TypeName = "nvarchar")]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Address")]
        public string Address { get; set; } // Address (length: 60)

        [Column(@"City", Order = 9, TypeName = "nvarchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 15)

        [Column(@"Region", Order = 10, TypeName = "nvarchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Region")]
        public string Region { get; set; } // Region (length: 15)

        [Column(@"PostalCode", Order = 11, TypeName = "nvarchar")]
        [Index(@"PostalCode", 1, IsUnique = false, IsClustered = false)]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 10)

        [Column(@"Country", Order = 12, TypeName = "nvarchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Country")]
        public string Country { get; set; } // Country (length: 15)

        [Column(@"HomePhone", Order = 13, TypeName = "nvarchar")]
        [MaxLength(24)]
        [StringLength(24)]
        [Display(Name = "Home phone")]
        public string HomePhone { get; set; } // HomePhone (length: 24)

        [Column(@"Extension", Order = 14, TypeName = "nvarchar")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Extension")]
        public string Extension { get; set; } // Extension (length: 4)

        [Column(@"Photo", Order = 15, TypeName = "image")]
        [MaxLength(2147483647)]
        [Display(Name = "Photo")]
        public byte[] Photo { get; set; } // Photo (length: 2147483647)

        [Column(@"Notes", Order = 16, TypeName = "ntext")]
        [MaxLength]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 1073741823)

        [Column(@"ReportsTo", Order = 17, TypeName = "int")]
        [Display(Name = "Reports to")]
        public int? ReportsTo { get; set; } // ReportsTo

        [Column(@"PhotoPath", Order = 18, TypeName = "nvarchar")]
        [MaxLength(255)]
        [StringLength(255)]
        [Display(Name = "Photo path")]
        public string PhotoPath { get; set; } // PhotoPath (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child Employees where [Employees].[ReportsTo] point to this entity (FK_Employees_Employees)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Employee> Employees { get; set; } // Employees.FK_Employees_Employees
        /// <summary>
        /// Child Orders where [Orders].[EmployeeID] point to this entity (FK_Orders_Employees)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Order> Orders { get; set; } // Orders.FK_Orders_Employees
        /// <summary>
        /// Child Territories (Many-to-Many) mapped by table [EmployeeTerritories]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Territory> Territories { get; set; } // Many to many mapping

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [Employees].([ReportsTo]) (FK_Employees_Employees)
        /// </summary>
        [ForeignKey("ReportsTo")] public virtual Employee Employee_ReportsTo { get; set; } // FK_Employees_Employees

        public Employee()
        {
            Employees = new System.Collections.Generic.List<Employee>();
            Orders = new System.Collections.Generic.List<Order>();
            Territories = new System.Collections.Generic.List<Territory>();
        }
    }

}
// </auto-generated>
