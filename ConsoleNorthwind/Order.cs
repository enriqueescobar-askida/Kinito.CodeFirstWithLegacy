// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ConsoleNorthwind
{

    // Orders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Order
    {
        [Column(@"OrderID", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Order ID")]
        public int OrderId { get; set; } // OrderID (Primary key)

        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Customer ID")]
        public string CustomerId { get; set; } // CustomerID (length: 5)

        [Display(Name = "Employee ID")]
        public int? EmployeeId { get; set; } // EmployeeID

        [Display(Name = "Order date")]
        public System.DateTime? OrderDate { get; set; } // OrderDate

        [Display(Name = "Required date")]
        public System.DateTime? RequiredDate { get; set; } // RequiredDate

        [Display(Name = "Shipped date")]
        public System.DateTime? ShippedDate { get; set; } // ShippedDate

        [Display(Name = "Ship via")]
        public int? ShipVia { get; set; } // ShipVia

        [Display(Name = "Freight")]
        public decimal? Freight { get; set; } // Freight

        [MaxLength(40)]
        [StringLength(40)]
        [Display(Name = "Ship name")]
        public string ShipName { get; set; } // ShipName (length: 40)

        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Ship address")]
        public string ShipAddress { get; set; } // ShipAddress (length: 60)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Ship city")]
        public string ShipCity { get; set; } // ShipCity (length: 15)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Ship region")]
        public string ShipRegion { get; set; } // ShipRegion (length: 15)

        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Ship postal code")]
        public string ShipPostalCode { get; set; } // ShipPostalCode (length: 10)

        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Ship country")]
        public string ShipCountry { get; set; } // ShipCountry (length: 15)

        // Reverse navigation

        /// <summary>
        /// Child OrderDetails where [Order Details].[OrderID] point to this entity (FK_Order_Details_Orders)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<OrderDetail> OrderDetails { get; set; } // Order Details.FK_Order_Details_Orders

        // Foreign keys

        /// <summary>
        /// Parent Customer pointed by [Orders].([CustomerId]) (FK_Orders_Customers)
        /// </summary>
        public virtual Customer Customer { get; set; } // FK_Orders_Customers
        /// <summary>
        /// Parent Employee pointed by [Orders].([EmployeeId]) (FK_Orders_Employees)
        /// </summary>
        public virtual Employee Employee { get; set; } // FK_Orders_Employees
        /// <summary>
        /// Parent Shipper pointed by [Orders].([ShipVia]) (FK_Orders_Shippers)
        /// </summary>
        public virtual Shipper Shipper { get; set; } // FK_Orders_Shippers

        public Order()
        {
            Freight = 0m;
            OrderDetails = new System.Collections.Generic.List<OrderDetail>();
        }
    }

}
// </auto-generated>
