// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ConsoleNorthwind
{

    // Territories
    [Table("Territories", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Territory
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TerritoryID", Order = 1, TypeName = "nvarchar")]
        [Index(@"PK_Territories", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [MaxLength(20)]
        [StringLength(20)]
        [Key]
        [Display(Name = "Territory ID")]
        public string TerritoryId { get; set; } // TerritoryID (Primary key) (length: 20)

        [Column(@"TerritoryDescription", Order = 2, TypeName = "nchar")]
        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Territory description")]
        public string TerritoryDescription { get; set; } // TerritoryDescription (length: 50)

        [Column(@"RegionID", Order = 3, TypeName = "int")]
        [Required]
        [Display(Name = "Region ID")]
        public int RegionId { get; set; } // RegionID

        // Reverse navigation

        /// <summary>
        /// Child Employees (Many-to-Many) mapped by table [EmployeeTerritories]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Employee> Employees { get; set; } // Many to many mapping

        // Foreign keys

        /// <summary>
        /// Parent Region pointed by [Territories].([RegionId]) (FK_Territories_Region)
        /// </summary>
        [ForeignKey("RegionId")] public virtual Region Region { get; set; } // FK_Territories_Region

        public Territory()
        {
            Employees = new System.Collections.Generic.List<Employee>();
        }
    }

}
// </auto-generated>
